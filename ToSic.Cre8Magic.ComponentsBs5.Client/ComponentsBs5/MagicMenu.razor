@using ToSic.Cre8magic.ComponentsBs5.Debug
@inherits MagicMenuRoot
@*
File Purpose:       Add a menu based on the parameter 'ConfigName'
Recommendations:    -
Nice to know:
    - Inherits from a base class that prepares everything
    - The <ThemePackageSettings> in the @inherits tells the system what will provide the settings
    - Prepares the menu structure and then renders using one of various menu controls
    - Can be configured directly on the tag, or can load a config from JSON
      The exact properties are defined in the base class
    - If necessary, you can create another type of menu and just add it to the list below
    - WIP: Later it will also be able to load a config from the page/theme settings
*@

@* Special Debugging *@
@if (true)
{
    var debug = MenuKit.Settings.Debug;
    <div class="alert alert-info">
        @* ConfigName: @(Menu?.Settings.ConfigName) <br/> *@
        HasChildren: @(MenuKit.Root.Children.Any()) - @MenuKit.Root.Children.Count() <br />
        Debug: @debug?.Allowed / @debug?.Anonymous / @debug?.Admin <br/>
        @* This: @Menu?.Name (@Menu?.Link) <br/> *@
        Variant: @MenuKit.Variant <br/>
        Ul-Classes: @MenuKit.Root.Classes("ul") <br />
        Li-Classes: @MenuKit.Root.Classes("li") <br />
        A-Classes: @MenuKit.Root.Classes("a") <br />
    </div>
}

@* Show the desired menu - in this setup we have 2 options. If you need more, change the conditions to check for Menu?.Settings.Template *@
@if (MenuKit.IsVariant("vertical"))
{
    <MagicMenuVertical Current="@MenuKit.Root">
        <Debug><li><MagicMenuDebug MenuKit="@MenuKit" Standalone="true"></MagicMenuDebug></li></Debug>
    </MagicMenuVertical>
}
else
{
    <MagicMenuHorizontal Current="@MenuKit.Root">
        <Debug><li><MagicMenuDebug MenuKit="@MenuKit" Standalone="true"></MagicMenuDebug></li></Debug>
    </MagicMenuHorizontal>
}