@using ToSic.Cre8magic.Settings
@inherits ComponentBase
@*
    Purpose:    Ensures that there is a wrapper - div or body
                which has a bunch of css-classes to tell the stylesheets
                which page it's on, what navigation / language is active etc.
*@
@code
{
    [Parameter, EditorRequired]
    public required MagicAllSettings AllSettings { get; set; }
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [Inject]
    protected IMagicThemeJsService? ThemeJs { get; set; }

    // [Inject] protected MagicThemeJsServiceTest? ThemeJsTest { get; set; }

    private bool PutInBody => AllSettings.ThemeSettings.MagicContextInBody == true;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        if (PutInBody && ThemeJs != null)
            await ThemeJs.SetBodyClasses(AllSettings.MagicContext);

        // await ThemeJsTest!.Log("test from test");
        // var x = await ThemeJsTest!.TestFromTest();
    }

}
@* Stop here if Settings are not ready *@
@if (AllSettings == null) 
{
    <text>Loading settings...</text>
    return;
}
<CascadingValue Value="AllSettings">
    @* If PutInBody a JS will place the classes in the Body tag *@
    @if (PutInBody)
    {
        @ChildContent
    }
    else
    {
        <div id="@AllSettings.ThemeDesignSettings.MagicContextTagId" class="@AllSettings.MagicContext">
            @ChildContent
        </div>
    }
</CascadingValue>