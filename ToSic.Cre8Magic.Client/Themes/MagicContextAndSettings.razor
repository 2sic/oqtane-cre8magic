@using Oqtane.UI
@using ToSic.Cre8magic.PageContext
@using ToSic.Cre8magic.Settings
@inherits ComponentBase
@inject IMagicPageContextService PageContextSvc;

@*
    Purpose:    Ensures that there is a wrapper - div or body
                which has a bunch of css-classes to tell the stylesheets
                which page it's on, what navigation / language is active etc.
*@
@code
{
    [Parameter, EditorRequired]
    public required MagicAllSettings AllSettings { get; set; }

    [CascadingParameter]
    public required PageState PageState { get; set; }

    [Parameter]
    public MagicPageContextSettings? Settings { get; set; }

    /// <summary>
    /// The HTML contents which is wrapped by this component.
    /// If the settings specify that it uses the Body tag, then no div is added.
    /// Otherwise, everything will be wrapped in a div with the magic CSS classes.
    /// </summary>
    [Parameter]
    public RenderFragment? ChildContent { get; set; }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        await base.OnAfterRenderAsync(firstRender);
        await PageContextSvc.SetBodyClasses(PageState, Settings);
    }
}
@{
    var state = PageContextSvc.State(PageState, Settings);
}
<CascadingValue Value="AllSettings">
    @* If PutInBody a JS will place the classes in the Body tag *@
    @if (state.UseBodyTag)
    {
        @ChildContent
    }
    else
    {
        <div id="@state.TagId" class="@state.Classes">
            @ChildContent
        </div>
    }
</CascadingValue>
