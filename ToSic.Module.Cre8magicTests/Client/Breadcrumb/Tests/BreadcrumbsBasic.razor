@using ToSic.Cre8magic.Breadcrumbs
@using ToSic.Theme.Cre8magicTests.Client
@using ToSic.Module.Cre8MagicTests.Client.Breadcrumb
@inherits ThemeControlBase

@code {
    // Theme Specs
    public override string Name => "Breadcrumb using Controls";
    public override string Panes => PaneNames.Default;
}
@{
    // Get the current environment - separate step, as we may change the mechanics later
    var currentEnv = TestParameters.EnvCurrent;

    var pageWithDeepBreadcrumb = TestParameters.PageWithDeepBreadcrumbIdDic[currentEnv];
}


<h1>MagicBreadcrumb in Control for @currentEnv</h1>

<h2>Oqtane standard Breadcrumbs (with s)</h2>
<Breadcrumbs></Breadcrumbs>

<h2>BasicBreadcrumb, no parameters</h2>
<BasicBreadcrumb></BasicBreadcrumb>

<h2>BasicBreadcrumb with data, without Settings</h2>
<BasicBreadcrumb></BasicBreadcrumb>

<hr/>

<h2>Tailors</h2>
<p>No Tailor (defaults to BasicTailor)</p>
<BasicBreadcrumb></BasicBreadcrumb>
<p>BasicBreadcrumb with @nameof(BreadcrumbTailorDark)</p>
<BasicBreadcrumb Settings="new() { Tailor = new BreadcrumbTailorDark() }"></BasicBreadcrumb>

<hr />

<h2>Settings</h2>
<p>Reverse</p>
<BasicBreadcrumb Settings="new() { Reverse = true }"></BasicBreadcrumb>

<p>Without Home</p>
<BasicBreadcrumb></BasicBreadcrumb>
<BasicBreadcrumb Settings="new() { WithHome = true }"></BasicBreadcrumb>
<BasicBreadcrumb Settings="new() { WithHome = false }"></BasicBreadcrumb>

<p>Without current</p>
<BasicBreadcrumb></BasicBreadcrumb>
<BasicBreadcrumb Settings="new() { WithActive = false }"></BasicBreadcrumb>
<BasicBreadcrumb Settings="new() { WithActive = true }"></BasicBreadcrumb>

<h3>BasicBreadcrumb with Settings { @nameof(MagicBreadcrumbSpell.ActiveId) = @pageWithDeepBreadcrumb }</h3>
<p>No designer</p>
<BasicBreadcrumb Settings="new() { ActiveId = pageWithDeepBreadcrumb }"></BasicBreadcrumb>
<p>BasicBreadcrumb with @nameof(MagicBreadcrumbTailorBs5)</p>
<BasicBreadcrumb Settings="new() { ActiveId = pageWithDeepBreadcrumb, Tailor = new MagicBreadcrumbTailorBs5() }"></BasicBreadcrumb>
<p>BasicBreadcrumb with @nameof(BreadcrumbTailorDark)</p>
<BasicBreadcrumb Settings="new() { ActiveId = pageWithDeepBreadcrumb, Tailor = new BreadcrumbTailorDark() }"></BasicBreadcrumb>

<hr />
<h3>BasicBreadcrumb Non-Existing { @nameof(MagicBreadcrumbSpell.ActiveId) = -1 }</h3>
<p>This should not show anything</p>
<BasicBreadcrumb Settings="new() { ActiveId = -1 }"></BasicBreadcrumb>
<p>End - there should be nothing to be seen</p>
