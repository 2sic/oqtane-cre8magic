@using ToSic.Cre8magic.Components.Internal
@using ToSic.Cre8magic.Menus
@using ToSic.Cre8magic.Menus.Internal
@using ToSic.Cre8magic.Spells
@using ToSic.Cre8magic.Themes
@inherits ComponentBase
@inject IMagicSpellsProvider SpellsProviders
@inject IMagicMenuService MenuSvc
@code {
    /// <inheritdoc cref="ComponentDocs.PageState"/>
    [CascadingParameter]
    public required PageState PageState { get; set; }
}
@{
    var redMenuName = "red-menu";
    var unknownMenuName = "unknown-menu";
    var redName = "red-part";

    var redDesign = new MagicMenuBlueprint
    {
        Parts = new()
        {
            { "ul", new() { Classes = "alert alert-warning" } },
        }
    };

    SpellsProviders.Reset();
    SpellsProviders.MenuBlueprints.Provide(redMenuName, redDesign);

    var themeSettings = new MagicThemeSpell
    {
        Parts = new()
        {
            { redName, new() { Design = redMenuName } }
        }
    };
    SpellsProviders.Themes.Provide("default", themeSettings);
}
<div class="alert alert-info">
    <h4>Menu Provide Design Red</h4>
    <p>
        Goal is that this code will configure a menu design, and the menu will pick it up automatically.
    </p>
    <BasicMenu MenuKit='MenuSvc.MenuKit(PageState, new() { Name = redMenuName, Pick = "." })'></BasicMenu>
    
    <hr />
    <p>
        This is the default
    </p>
    <BasicMenu MenuKit='MenuSvc.MenuKit(PageState, new() { Pick = "." })'></BasicMenu>
    
    <hr/>
    <p>
        This is an unknown name
    </p>
    <BasicMenu MenuKit='MenuSvc.MenuKit(PageState, new() { Name = unknownMenuName, Pick = "." })'></BasicMenu>

    <hr />
    <p>
        This uses a part name
    </p>
    <BasicMenu MenuKit='MenuSvc.MenuKit(PageState, new() { Name = redName, Pick = "." })'></BasicMenu>

</div>